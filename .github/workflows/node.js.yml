name: CI

on:
    # Run on all branches
    push:

jobs:
    check:
        strategy:
            matrix:
                # https://nodejs.org/en/about/releases/
                # LTS: 18.x
                # Current: 19.x
                node-version: [18.x, 19.x]

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Root package.json should not have non-dev dependencies
              run: jq --exit-status 'has("dependencies") != true' < package.json

            - name: Setup project
              run: npm run setup-project

            - name: Check formatting
              run: npm run prettier

            - name: Check linters
              run: npm run lint-project

    build:
        strategy:
            matrix:
                # https://nodejs.org/en/about/releases/
                # LTS: 18.x
                # Current: 19.x
                node-version: [18.x, 19.x]

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Setup project
              run: npm run setup-project

            - name: Build project
              run: npm run build-project

    unit-test:
        strategy:
            matrix:
                # https://nodejs.org/en/about/releases/
                # LTS: 18.x
                # Current: 19.x
                node-version: [18.x, 19.x]

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Setup project
              run: npm run setup-project

            - name: Run unit tests
              run: npm run test-project

    cypress:
        strategy:
            matrix:
                # https://nodejs.org/en/about/releases/
                # LTS: 18.x
                # Current: 19.x
                node-version: [18.x, 19.x]

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Setup project
              run: npm run setup-project

            - name: Run end-to-end tests
              id: cypress
              run: npm run cypress-ci

            - name: Archive Cypress videos on fail
              uses: actions/upload-artifact@v3
              # Only upload artifacts if Cypress failed
              if: ${{ failure() && steps.cypress.conclusion == 'failure' }}
              with:
                  name: cypress-videos
                  path: cypress/videos

    alert:
        environment: main
        needs: [check, build, unit-test, cypress]
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        runs-on: ubuntu-latest
        steps:
            - name: Dump GitHub context
              run: echo $JSON
              env:
                  JSON: ${{ toJSON(github) }}

            - name: Alert on failed CI in main
              uses: ravsamhq/notify-slack-action@v2
              with:
                  # explicit failure instead of ${{ job.status }} due to
                  # different job (TODO: fix somehow? how about multiple dependencies?)
                  status: 'failure'
                  notification_title: '{workflow} has {status_message}'
                  message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on commit *${{ github.event.head_commit.message }}* <{commit_url}|{commit_sha}> by *${{ github.event.head_commit.author.name }}*'
                  footer: 'Linked Repo <{repo_url}|{repo}>'
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
