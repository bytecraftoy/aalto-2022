{
    "scripts": {
        "ds": "run-p dev:*",
        "docusaurus": "npm run build-docs && npm run start-docs",
        "setup-project": "npm install && run-p setup:backend install:frontend install:dummy install:playwright",
        "build-project": "run-s build:*",
        "test-project": "run-s test:*",
        "lint-project": "run-s lint:*",
        "clean-project": "npm run clean:root && npm run clean:backend && npm run clean:frontend && npm run clean:dummy",
        "check-project": "npm run setup-project && run-s prettier-write lint-project build-project test-project",
        "clean-check": "npm run clean-project && npm run check-project",
        "deploy-project": "npm run setup-project && run-s build-project deploy:*",
        "demo-project": "npm run deploy-project && cd deploy && node index.js",
        "dev-project": "npm run setup-project && npm run ds",
        "build-docs": "cd ./docusaurus && npm install && cd ..",
        "start-docs": "cd ./docusaurus && npm start && cd .. ",
        "setup:backend": "cd ./backend && npm run setup && cd ..",
        "install:frontend": "cd ./frontend && npm install && cd ..",
        "install:backend": "cd ./backend && npm install && cd ..",
        "install:dummy": "cd ./dummy && npm install && cd ..",
        "build:backend": "npm run timestamp-commit && cd ./backend && npm run build && cpy files build && cd ..",
        "build:frontend": "cd ./frontend && npm run build && cpy . ../../backend/public/ --cwd=build && cd ..",
        "test:backend": "cd ./backend && npm test && cd ..",
        "test:dummy": "cd ./dummy && npm test && cd ..",
        "test:frontend": "cd ./frontend && npm test -- --watchAll=false && cd ..",
        "lint:backend": "cd ./backend && npm run lint && cd ..",
        "lint:dummy": "cd ./dummy && npm run lint && cd ..",
        "lint:frontend": "cd ./frontend && npm run lint && cd ..",
        "clean:root": "rm -rf deploy && rm -rf node_modules || npm run winclean:deploy",
        "winclean:root": "(if exist \"deploy\" rmdir /s /q \"deploy\") && (if exist \"node_modules\" rmdir /s /q \"node_modules\")",
        "clean:backend": "rm -rf backend/build && rm -rf backend/node_modules || npm run winclean:backend",
        "winclean:backend": "(if exist \"backend\\build\" rmdir /s /q \"backend\\build\") && (if exist \"backend\\node_modules\" rmdir /s /q \"backend\\node_modules\")",
        "clean:dummy": "rm -rf dummy/build && rm -rf dummy/node_modules || npm run winclean:dummy",
        "winclean:dummy": "(if exist \"dummy\\build\" rmdir /s /q \"dummy\\build\") && (if exist \"dummy\\node_modules\" rmdir /s /q \"dummy\\node_modules\")",
        "clean:frontend": "rm -rf frontend/build && rm -rf frontend/node_modules || npm run winclean:frontend",
        "winclean:frontend": "(if exist \"frontend\\build\" rmdir /s /q \"frontend\\build\") && (if exist \"frontend\\node_modules\" rmdir /s /q \"frontend\\node_modules\")",
        "deploy:backend": "cpy . ../../deploy --cwd=backend/build && cpy node_modules ../deploy --dot --cwd=backend",
        "deploy:frontend": "cpy . ../../deploy/public --cwd=frontend/build",
        "dev:backend": "cd ./backend && npm run dev",
        "dev:frontend": "cd ./frontend && npm run start",
        "dev:dummy": "cd ./dummy && npm run dev",
        "prettier": "npx prettier --check .",
        "prettier-write": "npx prettier --write .",
        "timestamp-commit": "node scripts/timestamp.js",
        "install:playwright": "npx playwright install",
        "playwright": "npx playwright test",
        "playwright-ci": "DUMMYURL='http://localhost:8080' npm run ds >/dev/null & wait-on --timeout 120000 http://127.0.0.1:3000 http://127.0.0.1:3030/api/health && npx playwright test"
    },
    "devDependencies": {
        "@playwright/test": "^1.31.1",
        "cpy-cli": "^4.2.0",
        "cross-env": "^7.0.3",
        "dotenv": "^16.0.3",
        "npm-run-all": "^4.1.5",
        "prettier": "2.7.1",
        "wait-on": "^6.0.1"
    }
}
